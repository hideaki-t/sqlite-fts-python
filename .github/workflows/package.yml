name: Python package

on: [push]
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "pypy-3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
    - name: Install native deps (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt install -y mecab libmecab-dev mecab-ipadic-utf8
    - name: Test with tox
      if: runner.os == 'Linux' || runner.os == 'Windows'
      run: |
        python -m pip install tox tox-gh-actions
        tox
    - name: Install native deps (macOS)
      if: runner.os == 'macOS' && matrix.python.version != 'pypy-3.9'
      run: |
        # it seems brew installed SQLite doesn't work with CPython somehow
        curl -s https://www.sqlite.org/2022/sqlite-autoconf-3400000.tar.gz | tar zxpf -
        cd sqlite-autoconf-3400000 && CPPFLAGS="-DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS" ./configure --enable-debug && make && cd ..
        # env DYLD_PRINT_LIBRARIES=1 DYLD_LIBRARY_PATH=$PWD/sqlite-autoconf-3370000/.libs python -vc 'import sqlite3; print(sqlite3.connect(":memory:").execute("PRAGMA compile_options").fetchall())'
    - name: Test with pytest (macOS)
      if: runner.os == 'macOS'
      run: |
        pip install pytest faker igo-python "janome<0.4" tinysegmenter
        pip install -e .
        env DYLD_LIBRARY_PATH=$PWD/sqlite-autoconf-3400000/.libs python -m pytest -svra tests
