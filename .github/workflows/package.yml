# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on: [push]
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        # platform: [ubuntu-latest, macos-latest, windows-latest]
        platform: [windows-latest]
        python-version: ["2.7", "3.7", "3.8", "3.9", "3.10", "pypy-2.7", "pypy-3.8"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-gh-actions
    - name: Install native deps (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt install -y mecab libmecab-dev mecab-ipadic-utf8
    - name: Install native deps (Windows)
      if: runner.os == 'Windows' && matrix.python-version == '2.7'
      shell: bash
      run: |
        pip install pathlib
        curl -fsSL -o sqlite_dll.zip https://www.sqlite.org/2021/sqlite-dll-win64-x64-3370000.zip
        7z x sqlite_dll.zip sqlite3.dll
        cp -v $(python -c "import sys, pathlib; print([x for x in map(pathlib.Path, sys.path) if x.name == 'DLLs'][0]/'_sqlite3.pyd')") . 
    - name: Test with tox
      run: |
        python -c 'import sys, sqlite3; print(sqlite3.version, sqlite3.sqlite_version)'
        python -c "import sqlite3; sqlite3.connect(':memory:').execute('select fts3_tokenizer()')"
        tox
      env:
        PYTHONIOENCODING: utf-8
