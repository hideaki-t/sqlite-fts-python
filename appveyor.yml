cache:
  - '%LOCALAPPDATA%\pip\Cache'

environment:
  global:
    SQLITE_WIN32_URL: https://www.sqlite.org/2018/sqlite-dll-win32-x86-3250100.zip
    SQLITE_WIN64_URL: https://www.sqlite.org/2018/sqlite-dll-win64-x64-3250100.zip
  matrix:
    - PYTHON: C:\Python37
      ARCH: x86
    - PYTHON: C:\Python37-x64
      ARCH: x64
    - PYTHON: C:\Python36
      ARCH: x86
    - PYTHON: C:\Python36-x64
      ARCH: x64
    - PYTHON: C:\Python35
      ARCH: x86
    - PYTHON: C:\Python35-x64
      ARCH: x64
    - PYTHON: C:\Python34
      ARCH: x86
    - PYTHON: C:\Python34-x64
      ARCH: x64
    - PYTHON: C:\Python33
      ARCH: x86
    - PYTHON: C:\Python33-x64
      ARCH: x64
    - PYTHON: C:\Python27
      ARCH: x86
    - PYTHON: C:\Python27-x64
      ARCH: x64

init:
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
  - ps: If ($env:ARCH -eq "x64") { `
          $env:SQLITE_URL=$env:SQLITE_WIN64_URL} `
        Else { `
          $env:SQLITE_URL=$env:SQLITE_WIN32_URL}

install:
  - curl -fsSL -o sqlite_dll.zip %SQLITE_URL%
  - 7z x sqlite_dll.zip sqlite3.dll
  - mkdir %TEMP%\DLLs
  - copy /Y %PYTHON%\DLLs\_sqlite3.pyd %TEMP%\DLLs
  - copy /Y sqlite3.dll %TEMP%\DLLs
  - python -m pip install -U pip
  - python -m pip install "pytest!=3.0.0" faker igo-python janome tinysegmenter3
  - python -m pip install -e .

build: false

test_script:
  - SET PYTHONPATH=%TEMP%\DLLs
  - SET PYTHONIOENCODING=utf-8
  - cd tests
  - py.test -sv
